# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CodeQL && Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Initialize CodeQL (${{ matrix.language }})
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
      
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  tests:
    name: Test build
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: 'discord.js'
            folder: 'discord.js'
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [ '16.x', '18.x' ]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install node.js ${{ matrix.node-version }} (sample)
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          # The action defaults to search for the dependency file (package-lock.json or yarn.lock)
          #   in the repository root, and uses its hash as a part of the cache key.
          # https://github.com/actions/setup-node#caching-packages-dependencies
          cache-dependency-path: package.json
      
      - name: Install dependencies as discord.js
        run: |
          npm install ${{ matrix.package }}
          npm run build --if-present
          npm run start
        env:
          myToken: ${{ secrets.CONFIG_BOT_TOKEN }}
